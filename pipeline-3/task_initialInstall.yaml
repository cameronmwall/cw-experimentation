apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: initial-install
  namespace: default
spec:
  params:
  - name: lowerVersion
    default: "2.3"
    description: The version of the initial install
    type: string
  - name: tag
    default: pipelineTest
    description: Image tag for the custom catalog
    type: string
  - name: destinationRepo
    default: quay.io/cameronmwall/catalog-rep
    description: The quay repo where the created catalog is placed
    type: string
  steps:
  - args:
    - |-
      #!/bin/bash
      set -e
      image=$(inputs.params.destinationRepo):$(inputs.params.tag)
      channel="release-"$(inputs.params.lowerVersion)
      oc apply -k operator
      oc patch catalogsource multiclusterhub-catalog --type=merge -p '{"spec":{"image":"'$image'"}}'
      oc patch sub multicluster-hub-operator-subscription --type=merge -p '{"spec":{"channel":"'$channel'"}}'
      count=0
      while :
      do
          if oc get csv advanced-cluster-management.v2.3.0 ; then
            break
          else
            if [ $count -gt 10 ]; then
              echo "CSV not created in  time"
              exit 1
            else
              sleep 5
              count=$(( $count + 1 ))
            fi
          fi
        done
      
      count=0
      while :
      do  
          status=$(oc get csv advanced-cluster-management.v2.3.0 -o jsonpath='{.status.phase}')
          if [ $status=="Succeeded" ]; then
              break
          else
              if [ $count -gt 120 ]; then
                  echo "CSV not created in  time"
                  exit 1
              else
                  sleep 5
                  count=$(( $count + 1 ))
              fi
          fi
      done
      oc apply -f mch.yml
      count=0
      while :
      do
          if oc get mch multiclusterhub ; then
            break
          else
            if [ $count -gt 10 ]; then
              echo "MCH not created in  time"
              exit 1
            else
              sleep 5
              count=$(( $count + 1 ))
            fi
          fi
        done
      
      count=0
      while :
      do  
          status=$(oc get mch multiclusterhub -o jsonpath='{.status.phase}')
          if [ $status=="Running" ]; then
              break
          else
              if [ $count -gt 120 ]; then
                  echo "MCH not created in  time"
                  exit 1
              else
                  sleep 5
                  count=$(( $count + 1 ))
              fi
          fi
      done
    command:
    - /bin/bash
    - -c
    image: image-registry.openshift-image-registry.svc:5000/openshift/cli:latest
    name: apply
    resources: {}
    workingDir: /workspace/source
  workspaces:
  - name: source